server:
  port: 7201
spring:
  kafka:
    bootstrap-servers: 127.0.0.1:9092
#    listener:
#      type: batch
    producer:
      # 设置大于 0 的值，则客户端会将发送失败的值重新发送
      retries: 0
      # acks =0 :生产者成功写入消息之前不等待任何来自服务器的响应
      # acks =1 :只要集群的首领节点收到消息，生产者就会收到一个来自服务器成功响应
      # acks =all :只有当所有参与复制的节点全部收到消息时，生产者才会收到一个来自服务器的成功响应
      acks: 1
      # 当有多个消息需要被发送到同一个分区时，生产者会把它们放在同一个批次里
      batch-size: 16384
      # 设置生产者内存缓冲区的大小 #32M
      buffer-memory: 33554432
      # 序列化
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      # 消费者组
      group-id: test-group
      # 自动提交的时间间隔 刷新间隔时间，负值失败时候刷新，0每次发送后刷新
      auto-commit-interval: 100
      # 是否自动提交偏移量，默认是 true，为了避免出现重复数据和数据丢失，可以把它设置为 false，然后手动提交便宜
      enable-auto-commit: false
      # earliest ：在偏移量无效的情况下，消费者将从起始位置读取分区的记录  当各分区下有已提交的offset时，从提交的offset开始消费；无提交的offset时，从头开始消费
      auto-offset-reset: earliest
      # 批量消费每次最多消费多少条消息
      max-poll-records: 6
      # 反序列化
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
